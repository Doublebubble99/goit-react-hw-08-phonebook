{"version":3,"file":"static/js/384.cd45742a.chunk.js","mappings":"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","sources":["components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","redux/contacts/selectors.js","components/ContactList/ContactList.jsx","../node_modules/@chakra-ui/toast/src/use-toast.tsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactFilter/ContactFilter.styled.jsx","components/ContactFilter/ContactFilter.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  background-color: teal;\n  margin-bottom: 10px;\n  height: 35px;\n  align-items: center;\n  padding: 10px;\n  border-radius: 12px;\n  border: 2px solid brown;\n  width: 250px;\n  @media screen and (min-width: 480px) {\n    height: 45px;\n    padding: 15px;\n    margin-bottom: 15px;\n    width: 425px;\n  }\n  @media screen and (min-width: 768px) {\n    height: 55px;\n    padding: 15px;\n    margin-bottom: 15px;\n    width: 650px;\n  }\n  @media screen and (min-width: 1200px) {\n    height: 65px;\n    padding: 20px;\n    margin-bottom: 20px;\n    width: 900px;\n  }\n`;\nexport const Info = styled.p`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: calc(20 / 16);\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n    line-height: calc(24 / 20);\n  }\n  @media screen and (min-width: 1200px) {\n    font-size: 24px;\n    line-height: calc(28 / 24);\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ListItem, Info } from './ContactItem.styled';\nfunction ContactItem({ name, number, children }) {\n  return (\n    <ListItem>\n      <Info>\n        {name}: {number}\n      </Info>\n      {children}\n    </ListItem>\n  );\n}\nexport default ContactItem;\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  children: PropTypes.object.isRequired,\n};\n","import styled from '@emotion/styled';\nexport const List = styled.ul`\n  margin-top: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  @media screen and (min-width: 768px) {\n    margin-top: 15px;\n  }\n  @media screen and (min-width: 1200px) {\n    margin-top: 20px;\n  }\n`;\nexport const Button = styled.button`\n  height: 25px;\n  border-radius: 8px;\n  color: white;\n  background-color: seashell;\n  color: brown;\n  cursor: pointer;\n  border: 1px solid black;\n  font-size: 12px;\n  height: 20px;\n  @media screen and (min-width: 480px) {\n    height: 25px;\n    width: 65px;\n    font-size: 14px;\n  }\n  @media screen and (min-width: 768px) {\n    height: 30px;\n    width: 75px;\n    font-size: 16px;\n  }\n  @media screen and (min-width: 1200px) {\n    height: 35px;\n    width: 100px;\n    font-size: 20px;\n  }\n  :hover,\n  :focus {\n    background-color: red;\n  }\n`;\n","export const filters = state => state.filters;\nexport const contacts = state => state.contacts;\nexport const selectLoading = state => state.contacts.isLoading;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Box } from '@chakra-ui/react';\nimport ContactItem from 'components/ContactItem';\nimport { List, Button } from './ContactList.styled';\nimport { contacts, filters } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\nfunction ContactList() {\n  const { items } = useSelector(contacts);\n  const filtersState = useSelector(filters);\n  const dispatch = useDispatch();\n  const filterNormalize = filtersState.toLowerCase();\n  const existingName = items.filter(({ name }) => {\n    return name.toLowerCase().includes(filterNormalize.trim());\n  });\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      paddingBottom=\"15px\"\n      w={['350px', '420px', '768px', '1024px', '1200px']}\n    >\n      <List>\n        {existingName.map(({ name, id, number }) => (\n          <ContactItem name={name} key={id} number={number} id={id}>\n            <Button\n              type=\"button\"\n              onClick={() => dispatch(deleteContact(id))}\n              id={id}\n            >\n              Delete\n            </Button>\n          </ContactItem>\n        ))}\n      </List>\n    </Box>\n  );\n}\nexport default ContactList;\n","import type { AlertStatus } from \"@chakra-ui/alert\"\nimport { StyleProps, ThemingProps, useChakra } from \"@chakra-ui/system\"\nimport type { RenderProps, ToastId, ToastOptions } from \"./toast.types\"\nimport { createToastFn, CreateToastFnReturn } from \"./toast\"\nimport { ToastPosition } from \"./toast.placement\"\nimport { useMemo } from \"react\"\nimport { useToastOptionContext } from \"./toast.provider\"\n\nexport interface UseToastOptions extends ThemingProps<\"Alert\"> {\n  /**\n   * The placement of the toast\n   *\n   * @default \"bottom\"\n   */\n  position?: ToastPosition\n  /**\n   * The delay before the toast hides (in milliseconds)\n   * If set to `null`, toast will never dismiss.\n   *\n   * @default 5000 ( = 5000ms )\n   */\n  duration?: ToastOptions[\"duration\"]\n  /**\n   * Render a component toast component.\n   * Any component passed will receive 2 props: `id` and `onClose`.\n   */\n  render?(props: RenderProps): React.ReactNode\n  /**\n   * The title of the toast\n   */\n  title?: React.ReactNode\n  /**\n   * The description of the toast\n   */\n  description?: React.ReactNode\n  /**\n   * If `true`, toast will show a close button\n   * @default false\n   */\n  isClosable?: boolean\n  /**\n   * The status of the toast.\n   */\n  status?: AlertStatus\n  /**\n   * A custom icon that will be displayed by the toast.\n   */\n  icon?: React.ReactNode\n  /**\n   * The `id` of the toast.\n   *\n   * Mostly used when you need to prevent duplicate.\n   * By default, we generate a unique `id` for each toast\n   */\n  id?: ToastId\n  /**\n   * Callback function to run side effects after the toast has closed.\n   */\n  onCloseComplete?: () => void\n  /**\n   * Optional style overrides for the container wrapping the toast component.\n   */\n  containerStyle?: StyleProps\n}\n\n/**\n * React hook used to create a function that can be used\n * to show toasts in an application.\n */\nexport function useToast(options?: UseToastOptions): CreateToastFnReturn {\n  const { theme } = useChakra()\n  const defaultOptions = useToastOptionContext()\n\n  return useMemo(\n    () =>\n      createToastFn(theme.direction, {\n        ...defaultOptions,\n        ...options,\n      }),\n    [options, theme.direction, defaultOptions],\n  )\n}\n\nexport default useToast\n","import styled from '@emotion/styled';\nexport const Container = styled.div`\n  display: block;\n  padding: 10px;\n  background-color: #253454;\n  border-radius: 12px;\n  border: 2px dashed green;\n  @media screen and (min-width: 768px) {\n    padding: 15px;\n  }\n  @media screen and (min-width: 1200px) {\n    padding: 20px;\n  }\n`;\nexport const Title = styled.h2`\n  font-family: 'Segoe UI', sans-serif;\n  text-align: center;\n  padding-bottom: 10px;\n  font-size: 20px;\n  line-height: calc(24 / 20);\n  @media screen and (min-width: 768px) {\n    font-size: 28px;\n    line-height: calc(32 / 28);\n  }\n  @media screen and (min-width: 1200px) {\n    font-size: 34px;\n    line-height: calc(38 / 34);\n  }\n`;\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  @media screen and (min-width: 768px) {\n    width: 420px;\n  }\n  @media screen and (min-width: 1200px) {\n    width: 800px;\n  }\n`;\nexport const Label = styled.label`\n  align-self: flex-start;\n  padding-bottom: 6px;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: calc(20 / 16);\n  font-family: 'Roboto', sans-serif;\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n    line-height: calc(28 / 24);\n  }\n  @media screen and (min-width: 1200px) {\n    font-size: 28px;\n    line-height: calc(32 / 28);\n  }\n`;\nexport const Input = styled.input`\n  width: 200px;\n  border-radius: 4px;\n  border: 1px solid red;\n  height: 25px;\n  outline: none;\n  width: 100%;\n  :focus {\n    border: 1px solid green;\n    background-color: aliceblue;\n    box-shadow: 0 0 6px 0 orange;\n  }\n  @media screen and (min-width: 768px) {\n    height: 35px;\n    font-size: 24px;\n    line-height: calc(28 / 24);\n  }\n  @media screen and (min-width: 1200px) {\n    height: 40px;\n    font-size: 28px;\n    line-height: calc(32 / 28);\n  }\n`;\nexport const Button = styled.button`\n  width: 100px;\n  border-radius: 8px;\n  margin-top: 10px;\n  height: 25px;\n  cursor: pointer;\n  border: 1px solid brown;\n  :active {\n    transform: scale(0.9);\n    border: 1px solid blue;\n    background-color: black;\n    color: white;\n  }\n  @media screen and (min-width: 768px) {\n    margin-top: 25px;\n    width: 150px;\n    height: 35px;\n    font-size: 24px;\n    line-height: calc(28 / 24);\n  }\n  @media screen and (min-width: 1200px) {\n    margin-top: 25px;\n    width: 200px;\n    height: 45px;\n    font-size: 24px;\n    line-height: calc(28 / 24);\n  }\n`;\n","import React from 'react';\nimport { useState } from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  Input,\n  Stack,\n  InputGroup,\n  InputLeftAddon,\n  Button,\n  Box,\n  useToast,\n} from '@chakra-ui/react';\nimport { contacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { Title, Form } from './ContactForm.styled';\nfunction ContactForm() {\n  const toast = useToast();\n  const { items } = useSelector(contacts);\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const onInput = evt => {\n    const target = evt.target;\n    if (target.name === 'name') {\n      setName(target.value);\n    } else if (target.name === 'number') {\n      setNumber(target.value);\n    }\n  };\n  const onSubmit = evt => {\n    evt.preventDefault();\n    const existingName = items.find(contact => contact.name === name);\n    if (existingName) {\n      toast({\n        title: `You already have ${name} in contacts!`,\n        status: 'warning',\n        isClosable: true,\n      });\n      return;\n    }\n    const id = nanoid();\n    dispatch(addContact({ number, name, id }));\n    setName('');\n    setNumber('');\n  };\n  return (\n    <Box\n      paddingTop=\"20px\"\n      paddingBottom=\"20px\"\n      w={['350px', '420px', '768px', '1024px', '1200px']}\n    >\n      <Title>Phonebook</Title>\n      <Form autoComplete=\"off\" onSubmit={onSubmit}>\n        <Stack spacing={4}>\n          <InputGroup width={[300, 400, 700, 900, 1000]}>\n            <InputLeftAddon\n              children=\"Name\"\n              height={['20px', '25px', '40px', '55px', '65px']}\n            />\n            <Input\n              value={name}\n              id=\"Name\"\n              type=\"text\"\n              color=\"chartreuse\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              onChange={onInput}\n              placeholder=\"Please enter the name\"\n              height={['20px', '25px', '40px', '55px', '65px']}\n            />\n          </InputGroup>\n          <InputGroup width={[300, 400, 700, 900, 1000]}>\n            <InputLeftAddon\n              children=\"Number\"\n              height={['20px', '25px', '40px', '55px', '65px']}\n            />\n            <Input\n              color=\"cadetblue\"\n              value={number}\n              id=\"Number\"\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              onChange={onInput}\n              placeholder=\"Please enter a number\"\n              height={['20px', '25px', '40px', '55px', '65px']}\n            />\n          </InputGroup>\n        </Stack>\n        <Button\n          type=\"submit\"\n          marginTop={['10px', '15px', '20px', '25px', '30px']}\n          colorScheme=\"whatsapp\"\n          width={[75, 100, 125, 150, 200]}\n          height={['20px', '30px', '35px', '40px', '50px']}\n          fontSize={['12px', '14px', '16px', '18px', '20px']}\n        >\n          Add contact\n        </Button>\n      </Form>\n    </Box>\n  );\n}\nexport default ContactForm;\n","import styled from '@emotion/styled';\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nexport const Label = styled.label`\n  font-family: 'Roboto', sans-serif;\n  font-weight: 500;\n  padding-bottom: 10px;\n  font-size: 18px;\n  line-height: calc(22 / 18);\n  @media screen and (min-width: 768px) {\n    padding-bottom: 15px;\n    font-size: 24px;\n    line-height: calc(28 / 24);\n  }\n  @media screen and (min-width: 1200px) {\n    padding-bottom: 20px;\n    font-size: 30px;\n    line-height: calc(34 / 30);\n  }\n`;\nexport const Input = styled.input`\n  width: 200px;\n  border-radius: 4px;\n  border: 1px solid red;\n  height: 25px;\n  outline: none;\n  :focus {\n    border: 1px solid green;\n    background-color: aliceblue;\n    box-shadow: 0 0 6px 0 orange;\n  }\n  @media screen and (min-width: 768px) {\n    height: 35px;\n    font-size: 24px;\n    line-height: calc(28 / 24);\n    width: 450px;\n  }\n  @media screen and (min-width: 1200px) {\n    height: 40px;\n    font-size: 28px;\n    line-height: calc(32 / 28);\n    width: 750px;\n  }\n`;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Input, InputGroup, InputLeftAddon, Box } from '@chakra-ui/react';\nimport { Label } from './ContactFilter.styled';\nimport { filters } from 'redux/contacts/selectors';\nimport { setFilters } from 'redux/contacts/filtersSlice';\nfunction ContactFilter() {\n  const filtersState = useSelector(filters);\n  const dispatch = useDispatch();\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      paddingBottom=\"15px\"\n      w={['350px', '420px', '768px', '1024px', '1200px']}\n    >\n      <Label htmlFor=\"Filter\">Find contacts by name</Label>\n      <InputGroup width={[300, 400, 700, 900, 1000]}>\n        <InputLeftAddon\n          children=\"Name\"\n          height={['20px', '25px', '40px', '55px', '65px']}\n        />\n        <Input\n          color=\"rosybrown\"\n          placeholder=\"Find name\"\n          height={['20px', '25px', '40px', '55px', '65px']}\n          id=\"Filter\"\n          onChange={({ target }) => dispatch(setFilters(target.value))}\n          value={filtersState}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        />\n      </InputGroup>\n    </Box>\n  );\n}\nexport default ContactFilter;\n","import { useEffect } from 'react';\nimport { Box, Spinner } from '@chakra-ui/react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ContactList from 'components/ContactList/ContactList';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoading } from 'redux/contacts/selectors';\nimport ContactFilter from '../components/ContactFilter/ContactFilter';\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Box\n      bgImage=\"url(https://cdn.pixabay.com/photo/2017/01/14/15/11/relaxing-1979674_1280.jpg)\"\n      w={['350px', '420px', '768px', '1024px', '1200px']}\n      marginLeft=\"auto\"\n      marginRight=\"auto\"\n    >\n      <ContactForm />\n      <ContactFilter />\n      <div>\n        {isLoading && (\n          <Spinner\n            thickness=\"4px\"\n            speed=\"0.65s\"\n            emptyColor=\"gray.200\"\n            color=\"blue.500\"\n            size=\"xl\"\n          />\n        )}\n      </div>\n      <ContactList />\n    </Box>\n  );\n}\n"],"names":["ListItem","styled","Info","name","number","children","List","Button","filters","state","contacts","selectLoading","isLoading","items","useSelector","filtersState","dispatch","useDispatch","filterNormalize","toLowerCase","existingName","filter","includes","trim","display","flexDirection","alignItems","paddingBottom","w","map","id","type","onClick","deleteContact","theme","defaultOptions","useToastOptionContext","useToast","createToastFn","useChakra","options","useMemo","direction","Title","Form","toast","useState","setName","setNumber","onInput","evt","target","value","paddingTop","autoComplete","onSubmit","preventDefault","find","contact","title","status","isClosable","nanoid","addContact","spacing","width","height","I","color","pattern","required","onChange","placeholder","marginTop","colorScheme","fontSize","Label","htmlFor","setFilters","Tasks","useEffect","fetchContacts","bgImage","marginLeft","marginRight","thickness","speed","emptyColor","size"],"sourceRoot":""}